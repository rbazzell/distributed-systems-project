services:
  coordinator:
    build: .
    container_name: coordinator
    ports:
      - "5000:5000"
    command: python -u coordinator.py
    volumes: 
      - "./app/:/app"
    networks:
      - strassen_network
    environment:
      - NODE_ID=coordinator
      - PORT=5000

  worker1:
    build: .
    image: "alpine:latest"
    container_name: worker1
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=1
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5001

  worker2:
    build: .
    image: "debian:stable-slim"
    container_name: worker2
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=2
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5002

  worker3:
    build: .
    image: "fedora:latest"
    container_name: worker3
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=3
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5003

  worker4:
    build: .
    container_name: worker4
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=4
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5004

  worker5:
    build: .
    container_name: worker5
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=5
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5005

  worker6:
    build: .
    container_name: worker6
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=6
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5006

  worker7:
    build: .
    container_name: worker7
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=7
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5007

  worker8:
    build: .
    container_name: worker8
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=8
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5008
  worker9:
    build: .
    container_name: worker9
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=9
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5009
  worker10:
    build: .
    container_name: worker10
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=10
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5010

  worker11:
    build: .
    container_name: worker11
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=11
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5011

  worker12:
    build: .
    container_name: worker12
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=12
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5012
    
  worker13:
    build: .
    container_name: worker13
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=13
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5013

  worker14:
    build: .
    container_name: worker14
    depends_on:
      - coordinator
    command: python -u worker.py
    networks:
      - strassen_network
    environment:
      - NODE_ID=14
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=5000
      - PORT=5014
  

networks:
  strassen_network:
    driver: bridge